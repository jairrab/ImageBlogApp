/*
 * Copyright (C) 2019 - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Antonio Barria <jaybarria@gmail.com>, 2019/12/31
 */

ext {
    //App version
    versionCode = 1
    versionName = '1.0'

    //SDK and tools
    compileSdkVersion = 29
    minSdkVersion = 21
    targetSdkVersion = 29
    buildToolsVersion = '29.0.2'

    //Versions
    kotlin_version = '1.3.70'
    javaSourceCompatibility = '8'
    javaTargetCompatibility = '8'
    jvmTarget = '1.8'

    dagger = '2.27'
    navigation = '2.2.1'
    coroutines = '1.3.5'
    room = '2.2.5'
    retrofit = '2.7.2'
    okhttp = '4.4.1'
    lifecycle_version = "2.2.0"

    androidLibrary = [
            appCompat            : 'androidx.appcompat:appcompat:1.1.0',
            billingLibrary       : 'com.android.billingclient:billing:1.2',
            cardView             : 'androidx.cardview:cardview:1.0.0',
            constraintLayout     : 'androidx.constraintlayout:constraintlayout:2.0.0-beta4', //beta 3 causing issues with RTL
            lifecycle            : "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version",
            lifecycle_java_8     : "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version",
            lifecycleExtensions  : "androidx.lifecycle:lifecycle-extensions:$lifecycle_version",
            liveData             : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version",
            localbroadcastmanager: 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0',
            multidex             : 'androidx.multidex:multidex:2.0.1',
            navigationFragment   : "androidx.navigation:navigation-fragment-ktx:$navigation",
            navigationUi         : "androidx.navigation:navigation-ui-ktx:$navigation",
            preferences          : 'androidx.preference:preference:1.1.0',
            preferencesKtx       : 'androidx.preference:preference-ktx:1.1.0',
            recyclerView         : 'androidx.recyclerview:recyclerview:1.1.0-rc01',
            room                 : "androidx.room:room-runtime:$room",
            roomCompiler         : "androidx.room:room-compiler:$room",
            roomKtx              : "androidx.room:room-ktx:$room",
            roomRxJava           : "androidx.room:room-rxjava2:$room",
            swipeRefreshLayout   : 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0',
            viewModel            : 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0-alpha01'
    ]

    googleLibrary = [
            firebaseAds           : 'com.google.firebase:firebase-ads:18.3.0',
            firebaseAnalytics     : 'com.google.firebase:firebase-analytics:17.2.1',
            firebaseAuth          : 'com.google.firebase:firebase-auth:19.2.0',
            firebaseStorage       : 'com.google.firebase:firebase-storage:19.1.0',
            firebaseUiAuth        : 'com.firebaseui:firebase-ui-auth:4.3.1',
            firestore             : 'com.google.firebase:firebase-firestore:21.3.1',
            firestoreKtx          : 'com.google.firebase:firebase-firestore-ktx:21.3.1',
            googleAnalytics       : 'com.google.android.gms:play-services-analytics:17.0.0',
            googleDrive           : 'com.google.android.gms:play-services-drive:17.0.0',
            googlePlayServices    : 'com.google.android.gms:play-services-auth:17.0.0',
            googleApiAndroidClient: 'com.google.api-client:google-api-client-android:1.30.5',
            googleDriveServices   : 'com.google.apis:google-api-services-drive:v3-rev188-1.25.0',
            gson                  : 'com.google.code.gson:gson:2.8.6',
            materialLibrary       : 'com.google.android.material:material:1.2.0-alpha05',
    ]

    kotlinLibrary = [
            coreKtx               : 'androidx.core:core-ktx:1.2.0',
            coroutines            : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines",
            coroutinesAndroid     : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines",
            coroutinesPlayServices: "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines",
            kotlinLib             : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version",
            kotlinSerialization   : 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.11.1',
    ]

    libraries = [
            autoLabelUi      : 'com.github.davidpizarro:autolabelui:1.0.1',
            crashlytics      : 'com.crashlytics.sdk.android:crashlytics:2.10.1@aar',
            dropbox          : 'com.dropbox.core:dropbox-core-sdk:3.1.1',
            fadingEdge       : 'com.github.bosphere.android-fadingedgelayout:fadingedgelayout:1.0.0',
            filePicker       : 'com.github.angads25:filepicker:1.1.1',
            glide            : 'com.github.bumptech.glide:glide:4.10.0',
            glideAnnotation  : 'com.github.bumptech.glide:compiler:4.10.0',
            leakCanary       : 'com.squareup.leakcanary:leakcanary-android:1.6.3',
            leakCanaryNoOp   : 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3',
            multiFab         : 'com.github.clans:fab:1.6.4',
            materialCalendar : 'com.github.prolificinteractive:material-calendarview:2.0.1',
            mpAndroidChart   : 'com.github.PhilJay:MPAndroidChart:v3.1.0-alpha',
            omadaRippleEffect: 'com.github.traex.rippleeffect:ripple:1.3.1-OG',
            omadaTypeface    : 'com.github.omadahealth.typefaceview:typefaceview:2.0.1',
            openCsv          : 'com.opencsv:opencsv:5.0',
            piracyChecker    : 'com.github.javiersantos:PiracyChecker:1.2.5',
            rateThisApp      : 'io.github.kobakei:ratethisapp:1.1.3',
            segmentedControl : 'info.hoang8f:android-segmented:1.0.6',
            timber           : 'com.jakewharton.timber:timber:4.7.1',
            threeTenAbp      : 'com.jakewharton.threetenabp:threetenabp:1.2.1'
    ]

    frameworkLibrary = [
            butterknife        : 'com.jakewharton:butterknife:10.2.0',
            butterknifeCompiler: 'com.jakewharton:butterknife-compiler:10.2.0',
            dagger             : "com.google.dagger:dagger:$dagger",
            daggerAndroid      : "com.google.dagger:dagger-android-support:$dagger",
            daggerProcessor    : "com.google.dagger:dagger-android-processor:$dagger",
            daggerCompiler     : "com.google.dagger:dagger-compiler:$dagger",
            javaxInject        : 'javax.inject:javax.inject:1',
            okhttp             : "com.squareup.okhttp3:okhttp:$okhttp",
            okhttpLogger       : "com.squareup.okhttp3:logging-interceptor:$okhttp",
            retrofit           : "com.squareup.retrofit2:retrofit:$retrofit",
            retrofitGson       : "com.squareup.retrofit2:converter-gson:$retrofit",
            retrofitRxJava     : "com.squareup.retrofit2:adapter-rxjava2:$retrofit",
            rxJava             : 'io.reactivex.rxjava2:rxjava:2.2.14',
            rxKotlin           : 'io.reactivex.rxjava2:rxkotlin:2.3.0',
            rxJavaAndroid      : 'io.reactivex.rxjava2:rxandroid:2.1.1'
    ]

    testLibrary = [
            androidXArchCore  : 'androidx.arch.core:core-testing:2.1.0',
            androidXTestCore  : 'androidx.test:core:1.2.0',
            androidXJunit     : 'androidx.test.ext:junit:1.1.1',
            androidxTestRunner: 'androidx.test:runner:1.2.0',
            androidxTestRules : 'androidx.test:rules:1.2.0',
            coroutines        : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines",
            espresso          : 'androidx.test.espresso:espresso-core:3.2.0',
            espressoContrib   : 'androidx.test.espresso:espresso-contrib:3.2.0',
            jUnit             : 'junit:junit:4.13',
            mockitoKotlin     : 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0',
            mockitoAndroid    : 'org.mockito:mockito-android:3.3.3',
            robolectric       : 'org.robolectric:robolectric:4.3.1',
            assertJ           : 'org.assertj:assertj-core:3.11.1'
    ]
}